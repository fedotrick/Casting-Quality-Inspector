[pytest]
# Pytest configuration for Quality Control application

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Add project root to Python path
pythonpath = .

# Minimum version
minversion = 7.0

# Output options
addopts =
    # Verbose output
    -v
    # Show summary of all test outcomes
    --tb=short
    # Show local variables in tracebacks
    -l
    # Capture output (stdout/stderr)
    --capture=no
    # Show warnings
    -W default
    # Coverage options (if pytest-cov is installed)
    # --cov=app
    # --cov-report=html
    # --cov-report=term-missing
    # Strict markers - fail on unknown markers
    --strict-markers
    # Show slowest tests
    --durations=10

# Markers for organizing tests
markers =
    unit: Unit tests that test individual functions/methods
    integration: Integration tests that test multiple components
    api: API endpoint tests
    database: Database layer tests
    security: Security and authentication tests
    slow: Tests that take a long time to run
    external: Tests that require external dependencies

# Console output encoding
console_output_style = progress

# Log configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Warnings
filterwarnings =
    # Treat deprecation warnings as errors in tests
    error::DeprecationWarning
    # Ignore specific warnings if needed
    # ignore::UserWarning

# Test collection
norecursedirs = .git .tox dist build *.egg __pycache__ .pytest_cache

# Timeout for tests (if pytest-timeout is installed)
# timeout = 30

# Disable cacheprovider for cleaner test runs
# cache_dir = /tmp/pytest_cache
